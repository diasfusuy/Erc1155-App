{
  "address": "0x9c12c5D5ad6F34Bc66AeEF5411FCf07CFfe95FC8",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_mint1155",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "forgeItem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mint1155",
      "outputs": [
        {
          "internalType": "contract IMint1155",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x1e51f654f1370ddff8b8037190b8666daea782de27f755aafc422a1a05732a3b",
  "receipt": {
    "to": null,
    "from": "0x9F48DE3fDB07b01b9F89c1241D493fcA1f5Fd464",
    "contractAddress": "0x9c12c5D5ad6F34Bc66AeEF5411FCf07CFfe95FC8",
    "transactionIndex": 2,
    "gasUsed": "576844",
    "logsBloom": "0x
    "blockHash": "0x81801d6cb905f3503c0593e512297acca98bea96ff49b4fff8fe15bc0929de5c",
    "transactionHash": "0x1e51f654f1370ddff8b8037190b8666daea782de27f755aafc422a1a05732a3b",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 19902590,
        "transactionHash": "0x1e51f654f1370ddff8b8037190b8666daea782de27f755aafc422a1a05732a3b",
        "address": "0x9c12c5D5ad6F34Bc66AeEF5411FCf07CFfe95FC8",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000009f48de3fdb07b01b9f89c1241d493fca1f5fd464"
        ],
        "data": "0x",
        "logIndex": 3,
        "blockHash": "0x81801d6cb905f3503c0593e512297acca98bea96ff49b4fff8fe15bc0929de5c"
      },
      {
        "transactionIndex": 2,
        "blockNumber": 19902590,
        "transactionHash": "0x1e51f654f1370ddff8b8037190b8666daea782de27f755aafc422a1a05732a3b",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000009f48de3fdb07b01b9f89c1241d493fca1f5fd464",
          "0x0000000000000000000000006ab3d36c46ecfb9b9c0bd51cb1c3da5a2c81cea6"
        ],
        "data": "0x000000000000000000000000000000000000000000000000006677d3fd8a700000000000000000000000000000000000000000000000000083067454a3a2a2bf0000000000000000000000000000000000000000000006ffd1ea21e16de86c7e000000000000000000000000000000000000000000000000829ffc80a61832bf0000000000000000000000000000000000000000000006ffd25099b56b72dc7e",
        "logIndex": 4,
        "blockHash": "0x81801d6cb905f3503c0593e512297acca98bea96ff49b4fff8fe15bc0929de5c"
      }
    ],
    "blockNumber": 19902590,
    "cumulativeGasUsed": "673157",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x742f82A0704dB5F0442F6Cfaf3A4d937A79ec1c9"
  ],
  "numDeployments": 2,
  "solcInputHash": "ddbd66f9000247f37eba71a1f5a925f0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mint1155\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"forgeItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mint1155\",\"outputs\":[{\"internalType\":\"contract IMint1155\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Forge.sol\":\"Forge\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/Forge.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity >=0.8.0 <0.9.0;\\r\\n\\r\\nimport {Ownable} from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ninterface IMint1155 {\\r\\n    function safeTransferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 id,\\r\\n        uint256 amount,\\r\\n        bytes calldata data\\r\\n    ) external;\\r\\n    function mintByForge(\\r\\n        address to,\\r\\n        uint256 id,\\r\\n        uint256 amount,\\r\\n        bytes memory data\\r\\n    ) external;\\r\\n} \\r\\n\\r\\ncontract Forge is Ownable {\\r\\n    IMint1155 public mint1155;\\r\\n\\r\\n    constructor(address _mint1155) Ownable(msg.sender) {\\r\\n        mint1155 = IMint1155(_mint1155);\\r\\n    }\\r\\n    \\r\\n\\r\\n\\r\\n    function forgeItem(uint256[] memory ids) public {\\r\\n    uint256 forgedId;\\r\\n\\r\\n    if (ids.length == 2) {\\r\\n        uint256 id1 = ids[0];\\r\\n        uint256 id2 = ids[1];\\r\\n        if ((id1 == 0 && id2 == 1) || (id1 == 1 && id2 == 0)) {\\r\\n            forgedId = 3; // FlamingSword\\r\\n        } else if ((id1 == 1 && id2 == 2) || (id1 == 2 && id2 == 1)) {\\r\\n            forgedId = 4; // EnchantedShield\\r\\n        } else if ((id1 == 0 && id2 == 2) || (id1 == 2 && id2 == 0)) {\\r\\n            forgedId = 5; // BattleAxe\\r\\n        } else {\\r\\n            revert(\\\"Invalid 2-item combo\\\");\\r\\n        }\\r\\n\\r\\n        mint1155.safeTransferFrom(msg.sender, address(0), id1, 1, \\\"\\\");\\r\\n        mint1155.safeTransferFrom(msg.sender, address(0), id2, 1, \\\"\\\");\\r\\n    } else if (ids.length == 3) {\\r\\n        uint256 id1 = ids[0];\\r\\n        uint256 id2 = ids[1];\\r\\n        uint256 id3 = ids[2];\\r\\n        // Check all 6 permutations of 0,1,2\\r\\n        if (\\r\\n            (id1 == 0 && id2 == 1 && id3 == 2) ||\\r\\n            (id1 == 0 && id2 == 2 && id3 == 1) ||\\r\\n            (id1 == 1 && id2 == 0 && id3 == 2) ||\\r\\n            (id1 == 1 && id2 == 2 && id3 == 0) ||\\r\\n            (id1 == 2 && id2 == 0 && id3 == 1) ||\\r\\n            (id1 == 2 && id2 == 1 && id3 == 0)\\r\\n        ) {\\r\\n            forgedId = 6; // Hero\\u2019s Armor\\r\\n            mint1155.safeTransferFrom(msg.sender, address(0), id1, 1, \\\"\\\");\\r\\n            mint1155.safeTransferFrom(msg.sender, address(0), id2, 1, \\\"\\\");\\r\\n            mint1155.safeTransferFrom(msg.sender, address(0), id3, 1, \\\"\\\");\\r\\n        } else {\\r\\n            revert(\\\"Invalid 3-item combo\\\");\\r\\n        }\\r\\n    } else {\\r\\n        revert(\\\"Invalid number of items\\\");\\r\\n    }\\r\\n\\r\\n    mint1155.mintByForge(msg.sender, forgedId, 1, \\\"\\\");\\r\\n    }\\r\\n}\",\"keccak256\":\"0x0ce0aac290064e88a273279437704222185a1a98f8bf712e280d69e2dae1512f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516109a43803806109a483398101604081905261002f916100d4565b338061005557604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61005e81610084565b50600180546001600160a01b0319166001600160a01b0392909216919091179055610104565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100e657600080fd5b81516001600160a01b03811681146100fd57600080fd5b9392505050565b610891806101136000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631bb987921461005c57806330e348d41461008b578063715018a6146100a05780638da5cb5b146100a8578063f2fde38b146100b9575b600080fd5b60015461006f906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61009e61009936600461071f565b6100cc565b005b61009e61063a565b6000546001600160a01b031661006f565b61009e6100c73660046107dd565b61064e565b600081516002036102c6576000826000815181106100ec576100ec61080d565b6020026020010151905060008360018151811061010b5761010b61080d565b602002602001015190508160001480156101255750806001145b806101395750816001148015610139575080155b1561014757600392506101ef565b8160011480156101575750806002145b8061016d575081600214801561016d5750806001145b1561017b57600492506101ef565b811580156101895750806002145b8061019d575081600214801561019d575080155b156101ab57600592506101ef565b60405162461bcd60e51b8152602060048201526014602482015273496e76616c696420322d6974656d20636f6d626f60601b60448201526064015b60405180910390fd5b60018054604051637921219560e11b81526001600160a01b039091169163f242432a916102259133916000918891600401610823565b600060405180830381600087803b15801561023f57600080fd5b505af1158015610253573d6000803e3d6000fd5b505060018054604051637921219560e11b81526001600160a01b03909116935063f242432a925061028d9133916000918791600401610823565b600060405180830381600087803b1580156102a757600080fd5b505af11580156102bb573d6000803e3d6000fd5b5050505050506105bd565b8151600303610575576000826000815181106102e4576102e461080d565b602002602001015190506000836001815181106103035761030361080d565b602002602001015190506000846002815181106103225761032261080d565b6020026020010151905082600014801561033c5750816001145b80156103485750806002145b8061036857508215801561035c5750816002145b80156103685750806001145b80610388575082600114801561037c575081155b80156103885750806002145b806103a8575082600114801561039e5750816002145b80156103a8575080155b806103c857508260021480156103bc575081155b80156103c85750806001145b806103e857508260021480156103de5750816001145b80156103e8575080155b1561052e5760018054604051637921219560e11b8152600696506001600160a01b039091169163f242432a916104279133916000918991600401610823565b600060405180830381600087803b15801561044157600080fd5b505af1158015610455573d6000803e3d6000fd5b505060018054604051637921219560e11b81526001600160a01b03909116935063f242432a925061048f9133916000918891600401610823565b600060405180830381600087803b1580156104a957600080fd5b505af11580156104bd573d6000803e3d6000fd5b505060018054604051637921219560e11b81526001600160a01b03909116935063f242432a92506104f79133916000918791600401610823565b600060405180830381600087803b15801561051157600080fd5b505af1158015610525573d6000803e3d6000fd5b5050505061056d565b60405162461bcd60e51b8152602060048201526014602482015273496e76616c696420332d6974656d20636f6d626f60601b60448201526064016101e6565b5050506105bd565b60405162461bcd60e51b815260206004820152601760248201527f496e76616c6964206e756d626572206f66206974656d7300000000000000000060448201526064016101e6565b60018054604051630bc2d73b60e11b815233600482015260248101849052604481019290925260806064830152600060848301526001600160a01b031690631785ae769060a401600060405180830381600087803b15801561061e57600080fd5b505af1158015610632573d6000803e3d6000fd5b505050505050565b61064261068c565b61064c60006106b9565b565b61065661068c565b6001600160a01b03811661068057604051631e4fbdf760e01b8152600060048201526024016101e6565b610689816106b9565b50565b6000546001600160a01b0316331461064c5760405163118cdaa760e01b81523360048201526024016101e6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561073257600080fd5b823567ffffffffffffffff8082111561074a57600080fd5b818501915085601f83011261075e57600080fd5b81358181111561077057610770610709565b8060051b604051601f19603f8301168101818110858211171561079557610795610709565b6040529182528482019250838101850191888311156107b357600080fd5b938501935b828510156107d1578435845293850193928501926107b8565b98975050505050505050565b6000602082840312156107ef57600080fd5b81356001600160a01b038116811461080657600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b0394851681529290931660208301526040820152606081019190915260a06080820181905260009082015260c0019056fea26469706673582212209675359b71d3665232d350edd304be56f55c8bb4bcf373f3804294174e6a218464736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c80631bb987921461005c57806330e348d41461008b578063715018a6146100a05780638da5cb5b146100a8578063f2fde38b146100b9575b600080fd5b60015461006f906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61009e61009936600461071f565b6100cc565b005b61009e61063a565b6000546001600160a01b031661006f565b61009e6100c73660046107dd565b61064e565b600081516002036102c6576000826000815181106100ec576100ec61080d565b6020026020010151905060008360018151811061010b5761010b61080d565b602002602001015190508160001480156101255750806001145b806101395750816001148015610139575080155b1561014757600392506101ef565b8160011480156101575750806002145b8061016d575081600214801561016d5750806001145b1561017b57600492506101ef565b811580156101895750806002145b8061019d575081600214801561019d575080155b156101ab57600592506101ef565b60405162461bcd60e51b8152602060048201526014602482015273496e76616c696420322d6974656d20636f6d626f60601b60448201526064015b60405180910390fd5b60018054604051637921219560e11b81526001600160a01b039091169163f242432a916102259133916000918891600401610823565b600060405180830381600087803b15801561023f57600080fd5b505af1158015610253573d6000803e3d6000fd5b505060018054604051637921219560e11b81526001600160a01b03909116935063f242432a925061028d9133916000918791600401610823565b600060405180830381600087803b1580156102a757600080fd5b505af11580156102bb573d6000803e3d6000fd5b5050505050506105bd565b8151600303610575576000826000815181106102e4576102e461080d565b602002602001015190506000836001815181106103035761030361080d565b602002602001015190506000846002815181106103225761032261080d565b6020026020010151905082600014801561033c5750816001145b80156103485750806002145b8061036857508215801561035c5750816002145b80156103685750806001145b80610388575082600114801561037c575081155b80156103885750806002145b806103a8575082600114801561039e5750816002145b80156103a8575080155b806103c857508260021480156103bc575081155b80156103c85750806001145b806103e857508260021480156103de5750816001145b80156103e8575080155b1561052e5760018054604051637921219560e11b8152600696506001600160a01b039091169163f242432a916104279133916000918991600401610823565b600060405180830381600087803b15801561044157600080fd5b505af1158015610455573d6000803e3d6000fd5b505060018054604051637921219560e11b81526001600160a01b03909116935063f242432a925061048f9133916000918891600401610823565b600060405180830381600087803b1580156104a957600080fd5b505af11580156104bd573d6000803e3d6000fd5b505060018054604051637921219560e11b81526001600160a01b03909116935063f242432a92506104f79133916000918791600401610823565b600060405180830381600087803b15801561051157600080fd5b505af1158015610525573d6000803e3d6000fd5b5050505061056d565b60405162461bcd60e51b8152602060048201526014602482015273496e76616c696420332d6974656d20636f6d626f60601b60448201526064016101e6565b5050506105bd565b60405162461bcd60e51b815260206004820152601760248201527f496e76616c6964206e756d626572206f66206974656d7300000000000000000060448201526064016101e6565b60018054604051630bc2d73b60e11b815233600482015260248101849052604481019290925260806064830152600060848301526001600160a01b031690631785ae769060a401600060405180830381600087803b15801561061e57600080fd5b505af1158015610632573d6000803e3d6000fd5b505050505050565b61064261068c565b61064c60006106b9565b565b61065661068c565b6001600160a01b03811661068057604051631e4fbdf760e01b8152600060048201526024016101e6565b610689816106b9565b50565b6000546001600160a01b0316331461064c5760405163118cdaa760e01b81523360048201526024016101e6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561073257600080fd5b823567ffffffffffffffff8082111561074a57600080fd5b818501915085601f83011261075e57600080fd5b81358181111561077057610770610709565b8060051b604051601f19603f8301168101818110858211171561079557610795610709565b6040529182528482019250838101850191888311156107b357600080fd5b938501935b828510156107d1578435845293850193928501926107b8565b98975050505050505050565b6000602082840312156107ef57600080fd5b81356001600160a01b038116811461080657600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b0394851681529290931660208301526040820152606081019190915260a06080820181905260009082015260c0019056fea26469706673582212209675359b71d3665232d350edd304be56f55c8bb4bcf373f3804294174e6a218464736f6c63430008140033",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/Forge.sol:Forge",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 211,
        "contract": "contracts/Forge.sol:Forge",
        "label": "mint1155",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IMint1155)206"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IMint1155)206": {
        "encoding": "inplace",
        "label": "contract IMint1155",
        "numberOfBytes": "20"
      }
    }
  }
}